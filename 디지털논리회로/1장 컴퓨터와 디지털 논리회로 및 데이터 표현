# 학습목표

## 시스템의 개념을 설명할 수 있다

### 시스템의 개념
입력과 출력이 디지털 데이터인 디지털 기반 시스템
입력과 출력이 있는 검은 상자
	사용자는 내부 작용은 어떻게 이루어지는가에 대해 궁금해하지 않는다.
	관찰자가 누구냐에 따라 다르게 정의된다
목적을 달성하기 위해 구성 요소들이 서로 상호작용하는 집합 체계
디지털 데이터 = 이산적인 데이터 값
0과 1 = 2진수로 치환이 가능한 녀석들
우리가 쓰는 일반적인 값들은 10진수, 20진수 등에 해당한다( 손가락, 발가락을 모두 합친 수) 이를 컴퓨터에 이해시키기 위해서는 진수 변환 과정이 필요
진수 변환 방법 : 2로 나눈 뒤 0과 1을 표현
시스템의 입출력이 모두 아날로그이거나 둘 중 하나만 아날로그라도 이는 디지털 시스템으로 취급되지 않는다.
	왜?
		우리가 디지털 시스템만으로 정의하려는 이유는 무엇일까?
		디지털만이 우리가 통제가 가능해서?
		아날로그 데이터의 경우, 통제와 제어가 어렵기 때문
			변환기를 쓴다던가
				이산 데이터로 변환시키기 위해
			아날로그 데이터 자체는 그 데이터 하나하나가 굉장히 관리하기가 어렵다
				왜
					짚어 내기 위해선, 반올림하거나 반내림 하는 등 별도의 방식으로 치환해야한다
					오류가 발생하게 되면, 한 단계씩 지나올 때 생겨나는 오류의 증폭량이 너무나 크다.

## 디지털 시스템의 장점을 설명할 수 있다.

디지털 시스템은 이산적인 데이터를 다룬다. 측정할 수 있다.
	안정성
		전자회로 소자의 기능은 온도, 습도 등의 외부 환경 요인에 따라 크게 변할 수 있다. 하지만 디지털 데이터는 0과 1의 상태 신호만 유지하면 되므로 아날로그 시스템에 비해 훨씬 높은 안정성(Stability)이 있다.
			0과 1의 상태 신호만 유지하면 되는 이유가 뭘까? 다른 것들은 안그런가?		
                1. 노이즈 내성(Noise Immunity)
					디지털 회로는 0(일반적으로 0~0.8V)과 1(보통 2~5V) 사이에 무효 구간을 두어 작동합니다. 예를 들어 3.3V 시스템에서는 1.65V를 기준으로 상한/하한 여유가 존재합니다.
						그러니까 무효구간이 있다는게 어떻다는건데?
							0.9v 미만은 아예 0으로 치환
							2.1v 초과는 1로 설정
							0과 1로만 데이터 수집 가능
						무효구간이 있어서 안정적으로 0과 1이라는 데이터 값을 계속해서 이산 추출해낼 수 있다는건가?
						어쨌던간 0과 1로 나누어서 계속해서 구분할 수 있따는 것
					신호가 임계값을 초과하면(예: 1.65V) 증폭기가 신호를 완전히 0V 또는 3.3V로 재생성합니다. 이 과정에서 약 40~60%의 전압 변동을 흡수할 수 있습니다.
				2. 이진 논리의 수학적 단순성
					2진 시스템은 불 대수(Boolean algebra)에 기반해 모든 연산을 AND/OR/NOT 게이트 조합으로 구현 가능합니다.
					3진 이상의 시스템(예: -1/0/+1)을 사용할 경우 게이트 설계 복잡도가 기하급수적으로 증가하며, 오류 확률이 2.8배 높아진다는 연구 결과가 있습니다[IEEE Trans. Circuits 2019].
				사례
					DRAM 메모리셀은 1비트 저장을 위해 20,000개의 전자를 사용한다. 이 중 30%까지 유실되어도 감지회로 0과 1을 정확히 판별할 수 있다.
						이게 어떻게 가능하다는거지?
			왜곡된 신호가 발생하면, 주변의 근사값으로 자동으로 클리핑(Clipping)이 가능하다
				클리핑(Clipping)은 신호의 진폭을 물리적으로 강제 제한하여 아날로그 신호의 연속성을 인위적으로 이산 상태로 변환하는 기술입니다. 디지털 시스템에서 이는 0과 1의 상태를 명확히 구분하기 위한 핵심 메커니즘으로 작동합니다.
				4.0v 초과시 4.0v로 고정
				-0.7v 미만인 경우, -0.7v로 고정
				출력범위가 -0.7v ~ 4.0v인 경우 디지털 시스템에서 0/1 판단 가능한 영역으로 강제 조정
					이게 어떻게 가능한건지
				클리핑은 디지털 시스템이 물리적 환경 변동을 논리적 오류로 전환하지 않도록 하는 핵심 장치입니다. 아날로그의 미세한 신호 변화를 인위적인 이진 상태로 강제 변환함으로써, 복잡한 환경에서도 데이터 무결성을 유지할 수 있습니다.
	편리성
		데이터가 숫자로 바로 입력되거나 출력되기에 사용자가 데이터를 인식하고 조작하는데 편리하다
			숫자로 바로 입출력된다?
				이게 정확히 무슨 말이지?
			🧐 아날로그 시스템은 숫자로 바로 입출력이 안되나? 어떤 차이가 있는거지?
	융통성
		외부 조건이 변하게 되면 그에 따라 시스템의 실행 순서도 조정할 수 있게 되기 때문에 시스템 사용에서 융통적이다
			알고리즘을 바꿀 수 있는 상태를 뜻하는건가?
			실제 사용하는 데이터들은 그게 어려울까? 연속적인 데이터는 그게 참 어려울 수 있겠지
	견고성
		왜곡된 신호가 발생하더라도 쉽게 재생이 가능하다?
			신호 왜곡이 발생해도 이진 상태(0/1)로 강제 재생성할 수 있는 물리적/논리적 메커니즘에서 비롯됩니다.
		아날로그 신호의 경우 원래의 신호를 재생시키는 것이 다소 어렵고 복잡하다
			왜 그런 걸까?
	정확성
		아날로그 신호는 증폭기의 정확도에 따라 출력전압에 오차가 발생할 수 있는 반면, 신호를 이산신호로 바꾸어 논리적인 처리를 할 수 있기 때문에 보다 정확성 있는 결과를 얻을 수 있다
			클리핑이 가능하기 떄문 아니던가. 이게 가능해지니, 복원도 쉽고, 간편하고 정확하게 만들 수가 있는거겠지

### 디지털 시스템의 설계 단계를 설명할 수 있다.

디지털 시스템의 설계 단계를 이해할 수 있다
		이걸 왜 하는걸까? '디지털 설계'?
		컴퓨터 기판을 이해하기 위해서?
		초기 작동 원리를 이해하기 위해서?
		아주 공학적인 것까지 다루는 이유는 뭐지?
	회로 설계 단계(Circuit Design)
		여러 전자 소자를 조합해 원하는 동작을 수행하는 회로를 만듦.
			논리 연산을 행하는 논리 회로의 기본 소자인 논리 소자
			능동소자
			수동소자
		회로란 전자 신호가 지나가는 통로, 길
		소자는 왜 만드는거지?
			논리 연산을 행하기 위해서?
				논리 연산이 뭐지?
				0과 1로 해당하는 것들을 의미하는건가?
	논리 설계(Logic Design)
		AND, NOT, NOR 같은 논리연산을 설계해 데이터를 처리하는 방법 결정
			이게 왜 꼭 필요한거지?
		계산기에서 숫자를 더하거나 빼는 논리 구성
	시스템 설계(System Design)
		논리 회로들을 조합해 더 큰 시스템을 설계(CPU, 메모리 등)
			CPU 와 메모리가 더 큰 논리회로구나... 트랜지스터라던가 저항 뭐 이런 애들보다... 이게 뭐지?
		컴퓨터가 명령어를 처리하는 구조 만들기
	실제적 설계(Physical Design)
		설계한 시스템을 실제 칩(반도체) 구현
		스마트 칩처럼 작고 빠른 하드웨어 제작
			Physical 한 것들을 만드니까 확실히 실제적인 칩이 등장하네.

4. 디지털 논리 회로의 개념을 이해할 수 있다.


5. 컴퓨터 시스템의 구성 요소와 구성 요소 간의 상호작용을 설명할 수 있다.
6. 집적회로의 집적도와 특성에 대해서 설명할 수 있다.
7. 각종 진수 변환 방법에 대해 이해할 수 있다.
8. 보수의 개념을 이해하고 컴퓨터 시스템의 음수 표현을 이해할 수 있다.
9. 디지털 코드의 종류 및 특성을 이해할 수 있다.
10. 아날로그 시스템과 디지털 시스템에 대해서 비교, 설명할 수 있다.
